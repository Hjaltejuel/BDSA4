// <auto-generated />
using BDSA2017.Assignment04;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BDSA2017.Assignment04.Migrations
{
    [DbContext(typeof(RaceContext))]
    partial class RaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BDSA2017.Assignment04.Entities.CarInRaces", b =>
                {
                    b.Property<int>("RaceId");

                    b.Property<int>("CarId");

                    b.Property<long?>("BestLap");

                    b.Property<int?>("EndPosition");

                    b.Property<int?>("StartPosition");

                    b.Property<long?>("TotalRaceTime");

                    b.HasKey("RaceId", "CarId");

                    b.HasAlternateKey("CarId", "RaceId");

                    b.ToTable("CarInRaces");
                });

            modelBuilder.Entity("BDSA2017.Assignment04.Entities.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DriverName")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("BDSA2017.Assignment04.Entities.Races", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActualEndTime");

                    b.Property<DateTime?>("ActualStartTime");

                    b.Property<int>("NumberOfLaps");

                    b.Property<DateTime>("PlannedEndTime");

                    b.Property<DateTime>("PlannedStartTime");

                    b.Property<int>("TrackId");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("BDSA2017.Assignment04.Entities.Tracks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BestTime");

                    b.Property<double>("Length");

                    b.Property<int>("MaxCars");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("BDSA2017.Assignment04.Entities.Races", b =>
                {
                    b.HasOne("BDSA2017.Assignment04.Entities.Tracks", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
